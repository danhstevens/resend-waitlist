{"version":3,"sources":["../src/server.ts"],"sourcesContent":["import { Resend } from 'resend';\nimport { Ratelimit } from \"@upstash/ratelimit\";\nimport { Redis } from \"@upstash/redis\";\n\ninterface ResendWaitlistProps {\n  apiKey: string;\n  audienceId: string;\n  upstashUrl?: string;\n  upstashToken?: string;\n  ratePerMinute?: number;\n}\n\nexport class ResendWaitlist {\n  resend: Resend;\n  audienceId: string;\n  rateLimiter?: Ratelimit;\n\n  constructor({ apiKey, audienceId, upstashUrl, upstashToken, ratePerMinute }: ResendWaitlistProps) {\n    // Resend params\n    this.audienceId = audienceId;\n    this.resend = new Resend(apiKey);\n\n    // Rate limit params\n    if (upstashUrl && upstashToken) {\n      this.rateLimiter = new Ratelimit({\n        redis: new Redis({ url: upstashUrl, token: upstashToken }),\n        limiter: Ratelimit.slidingWindow(ratePerMinute || 10, \"60 s\"),\n        prefix: \"@upstash/ratelimit\",\n        analytics: true\n      });\n    }\n  }\n\n  async addToWaitlist(email: string, fullName?: string) {\n    try {\n      if (this.rateLimiter) {\n        const { success } = await this.rateLimiter.limit(\"waitlist\");\n        if (!success) {\n          return { success: false, error: \"Woah, slow down there buddy! Rate limit exceeded.\" };\n        }\n      }\n\n      const nameParts = fullName?.trim().split(/\\s+/);\n      const result = await this.resend.contacts.create({\n        email: email.trim().toLowerCase(),\n        firstName: nameParts?.[0],\n        lastName: nameParts?.[1] ? nameParts.slice(1).join(\" \") : undefined,\n        audienceId: this.audienceId\n      });\n      if (result.error) {\n        return { success: false, error: result.error.message };\n      }\n    } catch (err) {\n      console.error(err); // unexpected error, log to the server for debugging\n      return { success: false, error: \"Could not add your email to the waitlist. Please try again.\" };\n    }\n\n    return { success: true };\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAuB;AACvB,uBAA0B;AAC1B,mBAAsB;AAUf,IAAM,iBAAN,MAAqB;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AAAA,EAEA,YAAY,EAAE,QAAQ,YAAY,YAAY,cAAc,cAAc,GAAwB;AAEhG,SAAK,aAAa;AAClB,SAAK,SAAS,IAAI,qBAAO,MAAM;AAG/B,QAAI,cAAc,cAAc;AAC9B,WAAK,cAAc,IAAI,2BAAU;AAAA,QAC/B,OAAO,IAAI,mBAAM,EAAE,KAAK,YAAY,OAAO,aAAa,CAAC;AAAA,QACzD,SAAS,2BAAU,cAAc,iBAAiB,IAAI,MAAM;AAAA,QAC5D,QAAQ;AAAA,QACR,WAAW;AAAA,MACb,CAAC;AAAA,IACH;AAAA,EACF;AAAA,EAEA,MAAM,cAAc,OAAe,UAAmB;AACpD,QAAI;AACF,UAAI,KAAK,aAAa;AACpB,cAAM,EAAE,QAAQ,IAAI,MAAM,KAAK,YAAY,MAAM,UAAU;AAC3D,YAAI,CAAC,SAAS;AACZ,iBAAO,EAAE,SAAS,OAAO,OAAO,oDAAoD;AAAA,QACtF;AAAA,MACF;AAEA,YAAM,YAAY,UAAU,KAAK,EAAE,MAAM,KAAK;AAC9C,YAAM,SAAS,MAAM,KAAK,OAAO,SAAS,OAAO;AAAA,QAC/C,OAAO,MAAM,KAAK,EAAE,YAAY;AAAA,QAChC,WAAW,YAAY,CAAC;AAAA,QACxB,UAAU,YAAY,CAAC,IAAI,UAAU,MAAM,CAAC,EAAE,KAAK,GAAG,IAAI;AAAA,QAC1D,YAAY,KAAK;AAAA,MACnB,CAAC;AACD,UAAI,OAAO,OAAO;AAChB,eAAO,EAAE,SAAS,OAAO,OAAO,OAAO,MAAM,QAAQ;AAAA,MACvD;AAAA,IACF,SAAS,KAAP;AACA,cAAQ,MAAM,GAAG;AACjB,aAAO,EAAE,SAAS,OAAO,OAAO,8DAA8D;AAAA,IAChG;AAEA,WAAO,EAAE,SAAS,KAAK;AAAA,EACzB;AACF;","names":[]}